version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: packages/shop-service/Dockerfile
    ports:
      - '${PORT:-3000}:${PORT:-3000}'
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=${PORT:-3000}
      - HOST=${HOST:-0.0.0.0}
      - DATABASE_URL=postgres://${DB_USER:-postgres}:${DB_PASSWORD:-postgres}@${DB_HOST:-db}:${DB_PORT:-5432}/${DB_NAME:-shop_db}
      - DB_HOST=db
      - DB_PORT=${DB_PORT:-5432}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_NAME=${DB_NAME:-shop_db}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./packages/shop-service:/app/packages/shop-service
      - /app/node_modules
      - /app/packages/shop-service/node_modules
    networks:
      - shop_network

  db:
    image: postgres:16-alpine
    ports:
      - '${DB_PORT:-5432}:5432'
    environment:
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
      - POSTGRES_DB=${DB_NAME:-shop_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - shop_network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-shop_db}']
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

networks:
  shop_network:
    driver: bridge
